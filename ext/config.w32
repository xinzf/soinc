ARG_ENABLE("soinc", "enable soinc", "no");

if (PHP_SOINC != "no") {
  EXTENSION("soinc", "soinc.c", null, "-I"+configure_module_dirname);
  ADD_SOURCES(configure_module_dirname + "/kernel", "main.c memory.c exception.c hash.c debug.c backtrace.c object.c array.c string.c fcall.c require.c file.c operators.c math.c concat.c variables.c filter.c iterator.c exit.c time.c", "soinc");
  ADD_SOURCES(configure_module_dirname + "/kernel/extended", "array.c fcall.c", "soinc");
  /* PCRE is always included on WIN32 */
  AC_DEFINE("ZEPHIR_USE_PHP_PCRE", 1, "Whether PHP pcre extension is present at compile time");
  if (PHP_JSON != "no") {
    ADD_EXTENSION_DEP("soinc", "json");
    AC_DEFINE("ZEPHIR_USE_PHP_JSON", 1, "Whether PHP json extension is present at compile time");
  }
  
  ADD_SOURCES(configure_module_dirname + "/soinc", "exception.zep.c abstractmodule.zep.c bootstrap.zep.c tools.zep.c", "soinc");
	ADD_SOURCES(configure_module_dirname + "/soinc/logger/processor", "abstractprocessor.zep.c trace.zep.c", "soinc");
	ADD_SOURCES(configure_module_dirname + "/soinc/db", "mysql.zep.c", "soinc");
	ADD_SOURCES(configure_module_dirname + "/soinc/exception", "db.zep.c", "soinc");
	ADD_SOURCES(configure_module_dirname + "/soinc/http/curl", "extended.zep.c", "soinc");
	ADD_SOURCES(configure_module_dirname + "/soinc/http/request", "extended.zep.c", "soinc");
	ADD_SOURCES(configure_module_dirname + "/soinc/http/response", "cookies.zep.c", "soinc");
	ADD_SOURCES(configure_module_dirname + "/soinc/logger/adapter", "file.zep.c", "soinc");
	ADD_SOURCES(configure_module_dirname + "/soinc/logger/formatter", "line.zep.c", "soinc");
	ADD_SOURCES(configure_module_dirname + "/soinc/model", "model.zep.c", "soinc");
	ADD_SOURCES(configure_module_dirname + "/soinc/worker", "taskabstract.zep.c worker.zep.c", "soinc");
  ADD_FLAG("CFLAGS_SOINC", "/D ZEPHIR_RELEASE");
}
